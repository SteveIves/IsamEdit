;;******************************************************************************
;;
;; File:        AssemblyInfo.dbl
;;
;; Description:	Assembly information attributes
;;
;; Author:		Steve Ives, Synergex Professional Services Group
;;
;;******************************************************************************
;; Copyright (c) 2012, Steve Ives
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice, this
;;   list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
;; DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
;; FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
;; DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
;; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
;; CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
;; OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
;; OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;;
;;******************************************************************************
;;

import System
import System.Collections.Generic
import System.Linq
import System.Text
import System.Reflection
import System.Diagnostics

.array 0
namespace IsamEdit.Tools
    
    public static class AssemblyInfo
        
        public static property Title, string
            method get
            proc
                data result, String, String.Empty
                data asy, @Assembly, Assembly.GetExecutingAssembly()
				if (asy != ^null)
                begin
                    data customAttributes, [#]@object
					customAttributes = asy.GetCustomAttributes(^typeof(AssemblyTitleAttribute), false)
                    if ((customAttributes != ^null) && (customAttributes.Length > 0))
                        result = ((@AssemblyTitleAttribute)customAttributes[0]).Title
                end
                mreturn result
            endmethod
        endproperty
        
        public static property Description, string
            method get
            proc
                data result, String, String.Empty
				data asy, @Assembly, Assembly.GetExecutingAssembly()
				if (asy != ^null)
                begin
                    data customAttributes, [#]@object
					customAttributes = asy.GetCustomAttributes(^typeof(AssemblyDescriptionAttribute), false)
                    if ((customAttributes != ^null) && (customAttributes.Length > 0))
                        result = ((@AssemblyDescriptionAttribute)customAttributes[0]).Description
                end
                mreturn result
            endmethod
        endproperty
        
        public static property Company, string
            method get
            proc
                data result, String, String.Empty
				data asy, @Assembly, Assembly.GetExecutingAssembly()
				if (asy != ^null)
                begin
                    data customAttributes, [#]@object
					customAttributes = asy.GetCustomAttributes(^typeof(AssemblyCompanyAttribute), false)
                    if ((customAttributes != ^null) && (customAttributes.Length > 0))
                        result = ((@AssemblyCompanyAttribute)customAttributes[0]).Company
                end
                mreturn result
            endmethod
        endproperty
        
        public static property Product, string
            method get
            proc
                data result, String, String.Empty
				data asy, @Assembly, Assembly.GetExecutingAssembly()
				if (asy != ^null)
                begin
                    data customAttributes, [#]@object
					customAttributes = asy.GetCustomAttributes(^typeof(AssemblyProductAttribute), false)
                    if ((customAttributes != ^null) && (customAttributes.Length > 0))
                        result = ((@AssemblyProductAttribute)customAttributes[0]).Product
                end
                mreturn result
            endmethod
        endproperty
        
        public static property Copyright, string
            method get
            proc
                data result, String, String.Empty
				data asy, @Assembly, Assembly.GetExecutingAssembly()
				if (asy != ^null)
                begin
                    data customAttributes, [#]@object
					customAttributes = asy.GetCustomAttributes(^typeof(AssemblyCopyrightAttribute), false)
                    if ((customAttributes != ^null) && (customAttributes.Length > 0))
                        result = ((@AssemblyCopyrightAttribute)customAttributes[0]).Copyright
                end
                mreturn result
            endmethod
        endproperty
        
        public static property Trademark, string
            method get
            proc
                data result, String, String.Empty
				data asy, @Assembly, Assembly.GetExecutingAssembly()
				if (asy != ^null)
                begin
                    data customAttributes, [#]@object
					customAttributes = asy.GetCustomAttributes(^typeof(AssemblyTrademarkAttribute), false)
                    if ((customAttributes != ^null) && (customAttributes.Length > 0))
                        result = ((@AssemblyTrademarkAttribute)customAttributes[0]).Trademark
                end
                mreturn result
            endmethod
        endproperty
        
        public static property AssemblyVersion, string
            method get
            proc
				data asy, @Assembly, Assembly.GetExecutingAssembly()
				mreturn asy.GetName().Version.ToString()
            endmethod
        endproperty
        
        public static property FileVersion, string
            method get
            proc
				data asy, @Assembly, Assembly.GetExecutingAssembly()
				data fvi, @FileVersionInfo, FileVersionInfo.GetVersionInfo(asy.Location)
                mreturn fvi.FileVersion
            endmethod
        endproperty
        
        public static property Guid, string
            method get
            proc
                data result, String, String.Empty
				data asy, @Assembly, Assembly.GetExecutingAssembly()
				if (asy != ^null)
                begin
                    data customAttributes, [#]@object
					customAttributes = asy.GetCustomAttributes(^typeof(System.Runtime.InteropServices.GuidAttribute), false)
                    if ((customAttributes != ^null) && (customAttributes.Length > 0))
                        result = ((@System.Runtime.InteropServices.GuidAttribute)customAttributes[0]).Value
                end
                mreturn result
            endmethod
        endproperty
        
        public static property FileName, string
            method get
            proc
				data asy, @Assembly, Assembly.GetExecutingAssembly()
				data fvi, @FileVersionInfo, FileVersionInfo.GetVersionInfo(asy.Location)
                mreturn fvi.OriginalFilename
            endmethod
        endproperty
        
        public static property FilePath, string
            method get
            proc
				data asy, @Assembly, Assembly.GetExecutingAssembly()
				data fvi, @FileVersionInfo, FileVersionInfo.GetVersionInfo(asy.Location)
                mreturn fvi.FileName
            endmethod
        endproperty
    endclass
endnamespace

