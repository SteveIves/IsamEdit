;;******************************************************************************
;;
;; Class:       SynPsg.Rps.RpsEnumMember
;;
;; Description: Represents a single Repository enumeration member
;;
;; Author:      Steve Ives, Synergex Professional Services Group
;;
;; Date:        2nd November 2009
;;
;;******************************************************************************
;; Copyright (c) 2009, Steve Ives
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice, this
;;   list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
;; DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
;; FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
;; DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
;; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
;; CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
;; OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
;; OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;;
;;******************************************************************************
;;

.define DDINFO_DEFINES_ONLY
.include "RPSLIB:ddinfo.def"
.undefine DDINFO_DEFINES_ONLY

import SynPsg.Rps
import System.Collections

namespace SynPsg.Rps

    public class RpsEnumMember
		
		;Field attribute data
		protected p_EnumName            ,a30
		protected p_Name				,a30
		protected p_ExplicitValue		,a11
		protected p_ImplicitValue		,a11

		.ifdef DBLV93
		; Constructor
        public method RpsEnumMember
            required in EnumName, a30
            required in Name, a30
			required in ExplicitValue, a11
			required in ImplicitValue, a11
            endparams
        proc
			Repository.CheckIsOpen()
			p_EnumName = EnumName
			p_Name = Name
			p_ExplicitValue = ExplicitValue
			p_ImplicitValue = ImplicitValue
		endmethod
		.endc
        
		;----------------------------------------------------------------------
		;Public properties to expose enumeration member attributes

        ; Structure name (a30)
        public property EnumName, a
            method get
            proc
                mreturn %atrim(p_EnumName)
			endmethod
        endproperty
        
        ; Member name (a30)
        public property Name, a
            method get
            proc
                mreturn %atrim(p_Name)
            endmethod
        endproperty

		; Member explicit value (may be blank) (a11)
		public property ExplicitValue, a
			method get
			proc
				mreturn %atrim(p_ExplicitValue)
			endmethod
		endproperty

		; Member implicit value (will not be blank) (a11)
		public property ImplicitValue, a
			method get
			proc
				mreturn %atrim(p_ImplicitValue)
			endmethod
		endproperty

	endclass

endnamespace
