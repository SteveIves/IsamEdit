;;******************************************************************************
;;
;; Class:		SynPsg.Rps.RpsRelation
;;
;; Description:	Represents a single relation definition for a Repository structure
;;
;; Author:		Steve Ives, Synergex Professional Services Group
;;
;; Date: 		19th October 2007
;;
;;******************************************************************************
;; Copyright (c) 2007, Steve Ives
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice, this
;;   list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
;; DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
;; FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
;; DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
;; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
;; CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
;; OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
;; OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;;
;;******************************************************************************
;;
.define DDINFO_DEFINES_ONLY
.include "RPSLIB:ddinfo.def"
.undefine DDINFO_DEFINES_ONLY

import SynPsg.Rps

namespace SynPsg.Rps

	public class RpsRelation
		
		;Relation attribute data
		protected p_RelationName	,a30
		protected p_FromKey			,a30
		protected p_ToStructure		,a30
		protected p_ToKey			,a30
		
		; Constructor
		public method RpsRelation
			required in StructureName, a
			required in RelationName, a
			endparams
		proc
			Repository.CheckIsOpen()
			LoadRelation(StructureName,RelationName)
		endmethod

		; Load relation
		private method LoadRelation, void
			required in StructureName, a
			required in RelationName, a
			endparams
		proc
			;Save the relation name
			p_RelationName = RpsUtils.UpperCase(RelationName)
			begin
				data p_s_info, s_info
				;Set the current structure?
				dd_struct(Repository.RpsControl,DDS_INFO,StructureName,p_s_info)
				if (Repository.RpsControl.error)
					throw new RpsRelationException("Failed to set current repository structure to "+StructureName)
				;Load the relation information
				dd_relation(Repository.RpsControl,DDR_INFO,p_RelationName,p_FromKey,p_ToStructure,p_ToKey)
				if (Repository.RpsControl.error)
				begin
					data msg, a120
					s_bld(msg,,"Failed to get information for repository relation %a.%a",StructureName,RelationName)
					throw new RpsRelationException(atrim(msg))
				end
			end
		endmethod
		
		;----------------------------------------------------------------------
		;Public properties to expose the attributes to the outside world
		
		; Relation name (a30)
		public property Name, a
			method get
			proc
				mreturn atrim(p_RelationName)
			endmethod
		endproperty
		
		; From key (a30)
		public property FromKey, a
			method get
			proc
				mreturn atrim(p_FromKey)
			endmethod
		endproperty

		; To structure (a30)
		public property ToStructure, a
			method get
			proc
				mreturn atrim(p_ToStructure)
			endmethod
		endproperty

		; To key (a30)
		public property ToKey, a
			method get
			proc
				mreturn atrim(p_ToKey)
			endmethod
		endproperty

	endclass

endnamespace

