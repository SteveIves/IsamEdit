;;******************************************************************************
;;
;; Class:		SynPsg.Rps.RpsTag
;;
;; Description:	Represents a single tag definition for a Repository structure
;;
;; Author:		Steve Ives, Synergex Professional Services Group
;;
;; Date: 		19th October 2007
;;
;;******************************************************************************
;; Copyright (c) 2007, Steve Ives
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice, this
;;   list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
;; DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
;; FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
;; DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
;; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
;; CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
;; OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
;; OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;;
;;******************************************************************************
;;

.define DDINFO_DEFINES_ONLY
.include "RPSLIB:ddinfo.def"
.undefine DDINFO_DEFINES_ONLY

import SynPsg.Rps

namespace SynPsg.Rps

	public class RpsTag
		
		;Tag attribute data
		protected p_tg_info	,tg_info
		protected p_TagName	,a30
		
		; Constructor
		public method RpsTag
			required in StructureName, a
			required in TagName, a
			endparams
		proc
			Repository.CheckIsOpen()
			LoadTag(StructureName,TagName)
		endmethod

		; LoadTag method
		private method LoadTag, void
			required in StructureName, a
			required in TagName, a
			endparams
		proc
			;Save the tag name
			p_TagName = RpsUtils.UpperCase(TagName)
			begin
				data p_s_info, s_info
				;Set the current structure?
				dd_struct(Repository.RpsControl,DDS_INFO,StructureName,^a(p_s_info))
				if (Repository.RpsControl.error)
				begin
					data errtxt, a120
					s_bld(errtxt,,"Failed to set current repository structure to %a.",StructureName)
                    throw new RpsTagException(%atrim(errtxt))
				end
				;Load tag information
				dd_tag(Repository.RpsControl,DDTG_INFO,p_TagName,^a(p_tg_info))
				if (Repository.RpsControl.error)
				begin
					data errtxt,a120
					s_bld(errtxt,,"Failed to load structure %a tag %a.",StructureName,TagName)
					throw new RpsTagException(errtxt)
				end
			end
		endmethod
		
		;----------------------------------------------------------------------
		;Public properties to expose tag data to the outside world
		
		; Tag name (a30)
		public property Name, a
			method get
			proc
				mreturn %atrim(p_TagName)
			endmethod
		endproperty
		
		; Sequence number (d3)
		public property SequenceNumber, int
			method get
			proc
				mreturn p_tg_info.tgi_seqnm
			endmethod
		endproperty

		; Tag field comparison connector (enum RpsTagComparison)
		;	CompareAnd, 1
		;	CompareOr, 2
		public property ComparisonConnector, RpsTagComparison
			method get
			proc
				mreturn (RpsTagComparison)integer(p_tg_info.tgi_tagcon)
			endmethod
		endproperty

		; Field name if si_tagtyp = TAGFLD (a30)
		public property Field, a
			method get
			proc
				mreturn %atrim(p_tg_info.tgi_tagfld)
			endmethod
		endproperty

		; Tag field comparison operator (enum RpsTagOperator)
		;	OpEQ, 1
		;	OpNE, 2
		;	OpLE, 3
		;	OpLT, 4
		;	OpGE, 5
		;	OpGT, 6
		public property ComparisonOperator, RpsTagOperator
			method get
			proc
				mreturn (RpsTagOperator)integer(p_tg_info.tgi_tagcmp)
			endmethod
		endproperty

		; Tag field comparison value (a15)
		public property ComparisonValue, a
			method get
			proc
				mreturn %atrim(p_tg_info.tgi_tagval)
			endmethod
		endproperty

	endclass

endnamespace

