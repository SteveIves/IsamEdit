;;******************************************************************************
;;
;; Class:		SynPsg.Rps.RpsTagCollection
;;
;; Description:	Represents a collection of tags for a Repository structure
;;
;; Author:		Steve Ives, Synergex Professional Services Group
;;
;; Date: 		19th October 2007
;;
;;******************************************************************************
;; Copyright (c) 2007, Steve Ives
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice, this
;;   list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
;; DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
;; FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
;; DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
;; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
;; CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
;; OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
;; OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;;
;;******************************************************************************
;;
.define DDINFO_DEFINES_ONLY
.include "RPSLIB:ddinfo.def"
.undefine DDINFO_DEFINES_ONLY

import SynPsg.Rps
import System.Collections.Generic

namespace SynPsg.Rps

	public class RpsTagCollection extends List<RpsTag>
		
		; Constructor (load tags for a structure)
		public method RpsTagCollection
			required in StructureName, a
			endparams
			parent()
		proc
			Repository.CheckIsOpen()
			LoadTags(StructureName)
		endmethod
		
		; Load tags
		private method LoadTags, void
			required in StructureName, a
			endparams
			record local_data
				MemHandle, int
				ix, int
			endrecord
		proc
			init local_data
			try 
			begin
				data p_s_info, s_info
				;Set the current structure?
				dd_struct(Repository.RpsControl,DDS_INFO,StructureName,p_s_info)
				if (Repository.RpsControl.error)
					throw new RpsTagException("Failed to get information for repository structure "+StructureName)
				;Do we have any tags to load?
				if (p_s_info.si_nmtags) 
				begin
					;Size the tag names array and get the tag names
					MemHandle = %mem_proc(DM_ALLOC,^size(strIdentifier)*p_s_info.si_nmtags)
					dd_tag(Repository.RpsControl,DDTG_LIST,p_s_info.si_nmtags,^m(strIdentifier,MemHandle))
					if (Repository.RpsControl.error)
						throw new RpsTagException("Failed to get tags for repository structure "+StructureName)
					;Add tags to collection
					for ix from 1 thru p_s_info.si_nmtags
						this.Add(new RpsTag(StructureName,^m(strIdentifier[ix],MemHandle)))
				end
			end
			finally
			begin
				;Free tag names array
				if (MemHandle) 
                    MemHandle = %mem_proc(DM_FREE,MemHandle)
			end
			endtry
		endmethod
		
	endclass

endnamespace
